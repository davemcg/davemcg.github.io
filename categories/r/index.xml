<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on eye Bioinformatician</title>
    <link>/./categories/r/</link>
    <description>Recent content in R on eye Bioinformatician</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 20 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/./categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let&#39;s Plot 9: The venerable box plot</title>
      <link>/./post/lets-plot-box-plot-fancy/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/./post/lets-plot-box-plot-fancy/</guid>
      <description>Intro Load packages Import Excel file Plotting! Hmm, the order is not ideal Overlay points Wilcox test ggbeeswarm Themes Themes, with some tweaking of color and text dabest, one comparison dabest, multiple comparisons Conclusion Session Info   Intro This is the 9th Let’s Plot…and I’ve not done a workup of the most useful plot - the boxplot. Oops. Well let’s rectify that.
 Load packages Many many packages. We’ll see what they do later.</description>
    </item>
    
    <item>
      <title>Let&#39;s Plot 8: (Animated) US State Covid-19 Case Count</title>
      <link>/./post/lets-plot-covid19-animated/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/./post/lets-plot-covid19-animated/</guid>
      <description>Load packages, pull data 2020 03 30 Update  Plotter function Cases by state Cases, with log10 scaling  Deaths by state (log10 scaled) Deaths by state, animated Shift plot Transform Data and plot Add exponential lines   Load packages, pull data 2020 03 30 Update CSSE changed their data structure, so I’ve updated the document.
I was using their “time series” data, but they dropped the US-specific (with state by state info) documents.</description>
    </item>
    
    <item>
      <title>Let&#39;s Plot 7: Clustered Dot Plots in the ggverse</title>
      <link>/./post/lets-plot-scrna-dotplots/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/./post/lets-plot-scrna-dotplots/</guid>
      <description>2020 03 23 Update Intro Example dotplot  How do I make a dotplot? But let’s do this ourself! Dotplot! Zero effort Remove dots where there is zero (or near zero expression) Better color, better theme, rotate x axis labels Tweak color scaling  Now what? Hey look: ggtree Let’s glue them together with cowplot How do we do better? Two more tweak options if you are having trouble: One more adjust Moonshot  Downside Exercises for the reader OLD Solution (kept for posterity)   2020 03 23 Update Ming Tang pointed out a better way to align plots, so I have rewritten the back end of this post.</description>
    </item>
    
    <item>
      <title>One Developer Portal: eyeIntegration Genesis</title>
      <link>/./post/one-developer-portal-genesis/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/./post/one-developer-portal-genesis/</guid>
      <description>News! eyeIntegration version 1.0 went live early this year (2019-01-16) and recently was accepted for publication in IOVS. In celebration of the news, I’m posting a small series of posts about the genesis, development, upgrades, and future of eyeIntegration.
You can find our latest manuscript on bioRxiv. The latest update should go live soon.
 Background eyeIntegration was developed to serve as a quick and easy to use normal gene expression portal in eye tissues.</description>
    </item>
    
    <item>
      <title>One Developer Portal: eyeIntegration Web Optimization</title>
      <link>/./post/one-developer-portal-optimization/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/./post/one-developer-portal-optimization/</guid>
      <description>This post is a continuation from here.
Really important stuff I learned to make a performant web site in Shiny After a few months of tinkering I had a working web app on my local computer, which is a 32GB of RAM, 1TB SSD Mac Pro trashcan. All of the data objects were .Rdata, which were load() when the site was initialized. This was fine in the beginning and in fact the shiny site was deployed with this structure in May of 2017.</description>
    </item>
    
    <item>
      <title>Quick Guide to Gene Name Conversion</title>
      <link>/./post/quick-guide-to-gene-name-conversion/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/quick-guide-to-gene-name-conversion/</guid>
      <description>Background There are several popular naming systems for (human) genes:
RefSeq (NM_000350) Ensembl (ENSG00000198691) HGNC Symbol (ABCA4) Entrez (24)  Given enough time in #bioinformatics, you will have to do every possible combination of conversions.
This post will very briefly explain the most expedient way to automatically convert between these formats with R.
 More exhaustive resources http://crazyhottommy.blogspot.com/2014/09/converting-gene-ids-using-bioconductor.html
https://davetang.org/muse/2013/11/25/thoughts-converting-gene-identifiers/
 Ensembl &amp;lt;-&amp;gt; HGNC &amp;lt;-&amp;gt; Entrez Stephen Turner has built a small set of data frames (well, tibbles) with core information, including transcript &amp;lt;-&amp;gt; gene info.</description>
    </item>
    
    <item>
      <title>Let&#39;s Plot 6: Simple guide to heatmaps with ComplexHeatmaps</title>
      <link>/./post/simple-heatmaps-with-complexheatmaps/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/simple-heatmaps-with-complexheatmaps/</guid>
      <description>Introduction Data processing Load data Peek at expression Peek at metadata Brief outline on how the RNA-seq data was processed before we see it Load libraries Create a Sample - Sample distance heatmap Easy heatmap with ComplexHeatmap Complex heatmap Finished heatmap  Gene Heatmaps A bit simpler  Session Info   Introduction Heatmaps are a core competency for a bioinformatician. They are a compact way to visually demonstrate relationships and changes in values across conditions.</description>
    </item>
    
    <item>
      <title>Template for rmarkdown reports</title>
      <link>/./post/template-for-rmarkdown-reports/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/template-for-rmarkdown-reports/</guid>
      <description>What is this? Since I keep opening up random recent Rmarkdown documents to copy the header to paste into my next document, I figure it would be more efficient to just make a post I could reach from anywhere (with an internet connection).
 Copy / paste: --- title: THE TITLE author: David McGaughey date: &amp;#39;`r format(Sys.Date(), &amp;quot;%Y-%m-%d&amp;quot;)`&amp;#39; output: html_notebook: theme: flatly toc: true code_folding: hide --- ```{r, message=F, warning=F, include=F} # Load Libraries without printing any warnings or messages library(tidyverse) ``` # Session Info</description>
    </item>
    
    <item>
      <title>Let’s Plot 5: ridgeline density plots</title>
      <link>/./post/let-s-plot-5-ridgeline-density-plots/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-5-ridgeline-density-plots/</guid>
      <description>Intro For this installment of Let’s Plot (where anyone can make a figure!), we’ll be making the hottest visualization of 2017 - the joy plot or ridgeline plot.
Joy plots are partially overlapping density line plots. They are useful for densely showing changes in many distributions over time / condition / etc.
This type of visualization was inspired by the cover art from Joy Division’s album Unknown Pleasures and implemented in the R package ggridges by Claus Wilke.</description>
    </item>
    
    <item>
      <title>Are you in genomics and building models? Stop using ROC - use PR</title>
      <link>/./post/are-you-in-genomics-stop-using-roc-use-pr/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/are-you-in-genomics-stop-using-roc-use-pr/</guid>
      <description>tldr Area Under the Curve (AUC) of Receiver Operating Characteristic (ROC) is a terrible metric for a genomics problem. Do not use it. This metric also goes by AUC or AUROC. Use Precision Recall AUC.
 Inspiration for this post I am working on a machine learning problem in genomics I was getting really confused why AUROC was so worthless scienceTwitter featuring Anshul Kundaje  I want to save you (some time)   What’s a ROC?</description>
    </item>
    
    <item>
      <title>Something Different: Automated Neighborhood Traffic Monitoring</title>
      <link>/./post/traffic-monitoring-intro/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/traffic-monitoring-intro/</guid>
      <description>title: ‘Something Different: Automated Neighborhood Traffic Monitoring’ author: David McGaughey date: ‘2018-03-03’ slug: traffic-monitoring-intro categories: - R - python - raspberry - pi tags: - R - python - raspberry - pi —
Introduction This is, obviously, a personal project. Traffic is a concern in my town. Cut-through, speeding, etc. The town has paid for a couple of (very expensive!) traffic surveys, but the reports are not very useful as the company only sets up in town for a few days (if that) and then only reports stuff like ‘number of cars for a one hour period.</description>
    </item>
    
    <item>
      <title>Let’s Plot 4: R vs Excel, Round 1</title>
      <link>/./post/let-s-plot-4-r-vs-excel/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-4-r-vs-excel/</guid>
      <description>Introduction Data Cleaning Reformatting Box Plot Boxplot with all the data displayed I used to prefer violin plots I’m a fan of beeswarm plots with boxplots Doing statistics. Session   Introduction The battle that we’ve all been waiting for. Excel vs. R. Bar plot versus a plot that actually shows the data.
Yeah, this isn’t a fair fight.
Bar plots are terrible. Why? Simple. They don’t show what your data looks like.</description>
    </item>
    
    <item>
      <title>Let’s Plot 3: Base pair resolution NGS (exome) coverage plots - Part 2</title>
      <link>/./post/let-s-plot-3-part-2/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-3-part-2/</guid>
      <description>Introduction Call mosdepth on bam to calculate bp-specific read depth Intersect base pair depth info with transcript and exon number Now it’s R time! Prepare Metadata Load mosdepth / bedtools intersect data and prep Plot Maker, version 1 Version 2 sessionInfo()    Introduction This is a barebones (but detailed enough, I hope) discussion of how to take a bam file, extract base pair resolution coverage data, then finagle the data into coverage plots by gene and exon.</description>
    </item>
    
    <item>
      <title>Let’s Plot 3: Base pair resolution NGS coverage plots (Part I)</title>
      <link>/./post/let-s-plot-3-part-i/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-3-part-i/</guid>
      <description>Load data Curious? Data How many genes are in this dataset? What genes are in here? How many data points (bases) per gene? How many exons per gene? How many base pairs of ABCA4 (well, ABCA4 exons) is covered by more than 10 reads? 5 reads? Let’s check all of the genes to see which are the worst covered We can visually display the data, also Hard to see what is going on, let’s make little plots for each gene Where are genes poorly covered?</description>
    </item>
    
    <item>
      <title>Split VCF into n pieces by coordinate</title>
      <link>/./post/split-vcf-into-n-pieces-by-coordinate/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/split-vcf-into-n-pieces-by-coordinate/</guid>
      <description>Introduction Read in vcf header Parse out chr / contig sizes Split chr above 3e7 base pairs into equal(ish) size pieces print coordinates given a chromosome / contig calculate coordinates print ’em output ’em for python input (Snakemake) rscript Using the script output sessionInfo()   Introduction bcftools view -r 1:40000-50000 vcf.gz will output (to stdout) a vcf containing the header and variants on chromosome 1 between coordinates 40,000 and 50,000 base pairs.</description>
    </item>
    
    <item>
      <title>Let’s Plot 2: Smoothed Lines</title>
      <link>/./post/let-s-plot-2-smoothed-lines/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-2-smoothed-lines/</guid>
      <description>Get data (two xls files) from here: Load data and look at structure (str) Head (first few lines) AUC, N1P1, Latency Summary of eel and cobra AUC What kind of time points or conditions or whatever do we have again? Summary by pig and region Plot AUC by time and region and pig Prettier plot with lines and more formatting N1P1 Plot Latency plot Bonus   Data from Aaron Rising.</description>
    </item>
    
    <item>
      <title>Let’s Plot 1: Going in circles </title>
      <link>/./post/let-s-plot-1/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-1/</guid>
      <description>What is going on? Where to get the code and data? Import data with readxl OK, first let’s remove the notes. However, we aren’t done. The data is “wide” instead of “long” and we have mixed session IDs (Amp 1-3 and Angle 1-3) with the value type. Now we need to extract the session (1,2,3) and the test type (Amp or Angle) Now we have two value types (Angle and Amplitude) in one column.</description>
    </item>
    
    <item>
      <title>What is Let’s Plot?</title>
      <link>/./post/what-is-let-s-plot/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/what-is-let-s-plot/</guid>
      <description>Tooling How can I follow along?   The concept is simple - I get data from one of the scientists in my group. Or I get my own. Then I demonstrate, step-by-step, how I generate the plot(s). I’ll also toss in some data science concepts occasionally.
They are a bit sparse on the words because I’m presenting these in person. But I believe they are clear enough for someone to follow along.</description>
    </item>
    
  </channel>
</rss>