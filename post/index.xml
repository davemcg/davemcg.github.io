<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on eye Bioinformatician</title>
    <link>/./post/</link>
    <description>Recent content in Posts on eye Bioinformatician</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="/./post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let’s Plot 3: Base pair resolution NGS (exome) coverage plots - Part 2</title>
      <link>/./post/let-s-plot-3-base-pair-resolution-ngs-exome-coverage-plots/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-3-base-pair-resolution-ngs-exome-coverage-plots/</guid>
      <description>Introduction Call mosdepth on bam to calculate bp-specific read depth Intersect base pair depth info with transcript and exon number Now it’s R time! Prepare Metadata Load mosdepth / bedtools intersect data and prep Plot Maker, version 1 Version 2 sessionInfo()    Introduction This is a barebones (but detailed enough, I hope) discussion of how to take a bam file, extract base pair resolution coverage data, then finagle the data into coverage plots by gene and exon.</description>
    </item>
    
    <item>
      <title>Let’s Plot 3: Base pair resolution NGS (exome) coverage plots - Part 1</title>
      <link>/./post/let-s-plot-3-base-pair-resolution-ngs-exome-coverage-plots-part-1/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-3-base-pair-resolution-ngs-exome-coverage-plots-part-1/</guid>
      <description>Load data This is a departure from the previous installments, as we are loading in a very processed dataset. The reasons why are numerous:
The original data is 330mb, compressed After loading (2 minutes on my quite fast computer) and uncompressing, it takes over 10GB of RAM on my computer The original data needed a severe amount of massaging to make it quickly useable:   Annotating with gene name Identifying primary transcript for gene Expanding range data into row-form*</description>
    </item>
    
    <item>
      <title>Split VCF into n pieces by coordinate</title>
      <link>/./post/split-vcf-into-n-pieces-by-coordinate/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/split-vcf-into-n-pieces-by-coordinate/</guid>
      <description>Introduction Read in vcf header Parse out chr / contig sizes Split chr above 3e7 base pairs into equal(ish) size pieces print coordinates given a chromosome / contig calculate coordinates print ’em output ’em for python input (Snakemake) rscript Using the script output sessionInfo()   Introduction bcftools view -r 1:40000-50000 vcf.gz will output (to stdout) a vcf containing the header and variants on chromosome 1 between coordinates 40,000 and 50,000 base pairs.</description>
    </item>
    
    <item>
      <title>Let’s Plot 2: Smoothed Lines</title>
      <link>/./post/let-s-plot-2-smoothed-lines/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-2-smoothed-lines/</guid>
      <description>Get data (two xls files) from here: Load data and look at structure (str) Head (first few lines) AUC, N1P1, Latency Summary of eel and cobra AUC What kind of time points or conditions or whatever do we have again? Summary by pig and region Plot AUC by time and region and pig Prettier plot with lines and more formatting N1P1 Plot Latency plot Bonus   Data from Aaron Rising.</description>
    </item>
    
    <item>
      <title>Let’s Plot 1: Going in circles </title>
      <link>/./post/let-s-plot-1/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/let-s-plot-1/</guid>
      <description>What is going on? Where to get the code and data? Import data with readxl OK, first let’s remove the notes. However, we aren’t done. The data is “wide” instead of “long” and we have mixed session IDs (Amp 1-3 and Angle 1-3) with the value type. Now we need to extract the session (1,2,3) and the test type (Amp or Angle) Now we have two value types (Angle and Amplitude) in one column.</description>
    </item>
    
    <item>
      <title>What is Let’s Plot?</title>
      <link>/./post/what-is-let-s-plot/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/./post/what-is-let-s-plot/</guid>
      <description>Tooling How can I follow along?   The concept is simple - I get data from one of the scientists in my group. Or I get my own. Then I demonstrate, step-by-step, how I generate the plot(s). I’ll also toss in some data science concepts occasionally.
They are a bit sparse on the words because I’m presenting these in person. But I believe they are clear enough for someone to follow along.</description>
    </item>
    
  </channel>
</rss>